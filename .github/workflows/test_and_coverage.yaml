name: Test and Coverage
on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.13'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        
      - name: Install dependencies
        run: uv sync --all-extras
        
      - name: Turn off default branching
        shell: bash
        run: bash ./update_itemization.sh
        
      - name: Run non-structural YAML tests (baseline)
        env:
          PYTHONUNBUFFERED: 1
          COVERAGE_FILE: .coverage.baseline
        run: |
          uv run python -m coverage run --branch --data-file=.coverage.baseline policyengine_us/tests/test_batched.py policyengine_us/tests/policy/baseline --batches 2
          
      - name: Run non-structural YAML tests (reform)
        env:
          PYTHONUNBUFFERED: 1
          COVERAGE_FILE: .coverage.reform
        run: |
          uv run python -m coverage run --branch --data-file=.coverage.reform policyengine_us/tests/test_batched.py policyengine_us/tests/policy/reform --batches 1
          
      - name: Run structural YAML tests
        env:
          PYTHONUNBUFFERED: 1
          COVERAGE_FILE: .coverage.contrib
        run: |
          uv run python -m coverage run --branch --data-file=.coverage.contrib policyengine_us/tests/test_batched.py policyengine_us/tests/policy/contrib
          
      - name: Run Python-based tests
        env:
          PYTHONUNBUFFERED: 1
          COVERAGE_FILE: .coverage.pytest
        run: |
          uv run python -m coverage run --branch --data-file=.coverage.pytest -m pytest policyengine_us/tests/ --maxfail=0
          
      - name: Produce combined coverage report
        run: |
          # Combine all parallel coverage files
          COVERAGE_FILE=.coverage uv run coverage combine .coverage.* || echo "No coverage files to combine"
          uv run coverage xml -i
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: github.event_name == 'push'
        
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml