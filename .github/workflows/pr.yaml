name: Pull request
on:
  pull_request:
    branches: [master]
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        uses: "lgeiger/black-action@master"
        with:
          args: ". -l 79 --check"
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: uv pip install -e ".[dev]" --system
      - name: Install dependencies
        run: uv pip install "yaml-changelog>=0.1.7" --system
      - name: Build changelog
        run: make changelog
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 10  # Need full history for git diff
      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install dependencies
        run: |
          uv sync --dev
          uv run pip install coverage
      - name: Turn off default branching
        shell: bash
        run: ./update_itemization.sh
      - name: Run selective tests based on changed files
        env:
          PYTHONUNBUFFERED: 1
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
        run: |
          echo "Running selective tests based on changed files..."
          uv run python policyengine_us/tests/run_selective_tests.py --base-branch ${{ github.base_ref }} --coverage
      - name: Generate coverage report
        if: always()
        run: |
          uv run coverage report
          uv run coverage xml
      - name: Check coverage threshold
        if: always()
        run: |
          echo "Checking coverage threshold..."
          uv run coverage report --fail-under=100
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
      - name: Build package
        run: uv build
